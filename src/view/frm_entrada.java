/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import com.itextpdf.text.DocumentException;
import controlador.ctrl_comun;
import controlador.ctrl_cotizacion;
import controlador.ctrl_entrada;

import controlador.ctrl_ubicacion;
import formatos_pdf.pdf_recepcion;
import java.awt.Color;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import model.class_entrada;


/**
 *
 * @author ruben
 */
public class frm_entrada extends javax.swing.JFrame {

    /**
     * Creates new form frm_ordendecompra
     */
    public frm_entrada() {
        initComponents();
        this.getContentPane().setBackground(new Color(240,240,240));
        
        this.setIconImage(new ImageIcon(funciones.logoempresa()).getImage());
        
        
        // Cargar Look And Feel (Marcos Windows )
        try{
         UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel"); 
        }
        catch(Exception e){} 
        this.setExtendedState(MAXIMIZED_BOTH);
        this.setTitle("SISTIMACA - ENTRADA DE MATERIAL");
        lbl_usuario.setText(frm_principalM1.lbl_usuario.getText().trim());
        lbl_nombres.setText(frm_principalM1.lbl_nombres.getText().trim());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txt_posicion = new javax.swing.JTextField();
        txt_identrada = new javax.swing.JTextField();
        group_entrada = new javax.swing.ButtonGroup();
        txt_nrodocumento = new javax.swing.JTextField();
        txt_idubicacion = new javax.swing.JTextField();
        txt_idproveedor = new javax.swing.JTextField();
        bot_buscar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_posicioncompra = new javax.swing.JTable();
        txt_numeroordendecompra = new javax.swing.JTextField();
        lbl_titulodetallesolicitud = new javax.swing.JLabel();
        txt_rifproveedor = new javax.swing.JTextField();
        bot_borrarposicion = new javax.swing.JButton();
        lbl_titulodetalleoc = new javax.swing.JLabel();
        bot_agregarposicion = new javax.swing.JButton();
        bot_verdocumento = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        table_posicionentrada = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        date_ingreso = new com.toedter.calendar.JDateChooser();
        lbl_cantidadpendiente = new javax.swing.JLabel();
        spin_cantidadingresada = new javax.swing.JSpinner();
        lbl_posicion = new javax.swing.JLabel();
        lbl_valoracion = new javax.swing.JLabel();
        cmb_valoracion = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        cmb_almacen = new javax.swing.JComboBox();
        jLabel15 = new javax.swing.JLabel();
        lbl_observacion = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        area_observacion = new javax.swing.JTextArea();
        lbl_cantidadautorizada = new javax.swing.JLabel();
        lbl_numeromaterial = new javax.swing.JLabel();
        lbl_umb1 = new javax.swing.JLabel();
        panel_foto = new javax.swing.JPanel();
        lbl_foto = new javax.swing.JLabel();
        lbl_desnromaterial = new javax.swing.JLabel();
        lbl_descantidadautorizada = new javax.swing.JLabel();
        txt_ubicacion = new javax.swing.JTextField();
        lbl_ubicacionexiste = new javax.swing.JLabel();
        lbl_cantidadautorizada1 = new javax.swing.JLabel();
        lbl_desproyecto = new javax.swing.JLabel();
        lbl_cantidadaprobada1 = new javax.swing.JLabel();
        lbl_cantidaddespachada = new javax.swing.JLabel();
        lbl_descantidadingresada = new javax.swing.JLabel();
        lbl_descantidadpendiente = new javax.swing.JLabel();
        lbl_unidadmedida = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        lbl_encabezadoalmacen2 = new javax.swing.JLabel();
        lbl_imagentimaca2 = new javax.swing.JLabel();
        bot_reiniciar = new javax.swing.JButton();
        bot_cerrar = new javax.swing.JButton();
        lbl_usuario = new javax.swing.JLabel();
        lbl_nombres = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        bot_buscarproveedor = new javax.swing.JButton();
        radio_ordencompra = new javax.swing.JRadioButton();
        radio_rif = new javax.swing.JRadioButton();

        txt_posicion.setText("0");

        txt_identrada.setText("0");

        txt_nrodocumento.setText("0");

        txt_idubicacion.setText("0");
        txt_idubicacion.setToolTipText("");

        bot_buscar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bot_buscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/buscar.png"))); // NOI18N
        bot_buscar.setText("BUSCAR");
        bot_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bot_buscarActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        table_posicioncompra.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        table_posicioncompra.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id_proveedor", "PROVEEDOR", "ORDEN DE COMPRA", "POSICIÓN", "NRO MATERIAL", "MATERIAL", "CANTIDAD AUTORIZADA", "UMB", "FECHA COMPRA", "codigo_moneda", "id_solicitud", "id_proyecto", "proyecto", "preciounitario", "total", "flete", "totalconflete", "idcotizacion"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_posicioncompra.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                table_posicioncompraMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(table_posicioncompra);
        if (table_posicioncompra.getColumnModel().getColumnCount() > 0) {
            table_posicioncompra.getColumnModel().getColumn(0).setMinWidth(1);
            table_posicioncompra.getColumnModel().getColumn(0).setPreferredWidth(1);
            table_posicioncompra.getColumnModel().getColumn(0).setMaxWidth(1);
            table_posicioncompra.getColumnModel().getColumn(3).setMinWidth(60);
            table_posicioncompra.getColumnModel().getColumn(3).setPreferredWidth(60);
            table_posicioncompra.getColumnModel().getColumn(3).setMaxWidth(60);
            table_posicioncompra.getColumnModel().getColumn(4).setMinWidth(100);
            table_posicioncompra.getColumnModel().getColumn(4).setPreferredWidth(100);
            table_posicioncompra.getColumnModel().getColumn(4).setMaxWidth(100);
            table_posicioncompra.getColumnModel().getColumn(5).setMinWidth(400);
            table_posicioncompra.getColumnModel().getColumn(5).setPreferredWidth(400);
            table_posicioncompra.getColumnModel().getColumn(5).setMaxWidth(400);
            table_posicioncompra.getColumnModel().getColumn(6).setMinWidth(140);
            table_posicioncompra.getColumnModel().getColumn(6).setPreferredWidth(140);
            table_posicioncompra.getColumnModel().getColumn(6).setMaxWidth(140);
            table_posicioncompra.getColumnModel().getColumn(7).setMinWidth(50);
            table_posicioncompra.getColumnModel().getColumn(7).setPreferredWidth(50);
            table_posicioncompra.getColumnModel().getColumn(7).setMaxWidth(50);
            table_posicioncompra.getColumnModel().getColumn(8).setMinWidth(100);
            table_posicioncompra.getColumnModel().getColumn(8).setPreferredWidth(100);
            table_posicioncompra.getColumnModel().getColumn(8).setMaxWidth(100);
            table_posicioncompra.getColumnModel().getColumn(9).setMinWidth(0);
            table_posicioncompra.getColumnModel().getColumn(9).setPreferredWidth(0);
            table_posicioncompra.getColumnModel().getColumn(9).setMaxWidth(0);
            table_posicioncompra.getColumnModel().getColumn(10).setMinWidth(0);
            table_posicioncompra.getColumnModel().getColumn(10).setPreferredWidth(0);
            table_posicioncompra.getColumnModel().getColumn(10).setMaxWidth(0);
            table_posicioncompra.getColumnModel().getColumn(11).setMinWidth(0);
            table_posicioncompra.getColumnModel().getColumn(11).setPreferredWidth(0);
            table_posicioncompra.getColumnModel().getColumn(11).setMaxWidth(0);
            table_posicioncompra.getColumnModel().getColumn(12).setMinWidth(0);
            table_posicioncompra.getColumnModel().getColumn(12).setPreferredWidth(0);
            table_posicioncompra.getColumnModel().getColumn(12).setMaxWidth(0);
            table_posicioncompra.getColumnModel().getColumn(13).setMinWidth(0);
            table_posicioncompra.getColumnModel().getColumn(13).setPreferredWidth(0);
            table_posicioncompra.getColumnModel().getColumn(13).setMaxWidth(0);
            table_posicioncompra.getColumnModel().getColumn(14).setMinWidth(0);
            table_posicioncompra.getColumnModel().getColumn(14).setPreferredWidth(0);
            table_posicioncompra.getColumnModel().getColumn(14).setMaxWidth(0);
            table_posicioncompra.getColumnModel().getColumn(15).setMinWidth(0);
            table_posicioncompra.getColumnModel().getColumn(15).setPreferredWidth(0);
            table_posicioncompra.getColumnModel().getColumn(15).setMaxWidth(0);
            table_posicioncompra.getColumnModel().getColumn(16).setMinWidth(0);
            table_posicioncompra.getColumnModel().getColumn(16).setPreferredWidth(0);
            table_posicioncompra.getColumnModel().getColumn(16).setMaxWidth(0);
            table_posicioncompra.getColumnModel().getColumn(17).setMinWidth(0);
            table_posicioncompra.getColumnModel().getColumn(17).setPreferredWidth(0);
            table_posicioncompra.getColumnModel().getColumn(17).setMaxWidth(0);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, 1320, 120));

        txt_numeroordendecompra.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_numeroordendecompra.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_numeroordendecompraKeyReleased(evt);
            }
        });
        getContentPane().add(txt_numeroordendecompra, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 170, 30));

        lbl_titulodetallesolicitud.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_titulodetallesolicitud.setForeground(new java.awt.Color(0, 138, 218));
        lbl_titulodetallesolicitud.setText("DETALLES ORDEN DE COMPRA");
        getContentPane().add(lbl_titulodetallesolicitud, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 120, -1, -1));

        txt_rifproveedor.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_rifproveedor.setEnabled(false);
        txt_rifproveedor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_rifproveedorKeyReleased(evt);
            }
        });
        getContentPane().add(txt_rifproveedor, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 90, 180, 30));

        bot_borrarposicion.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        bot_borrarposicion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/borrar.png"))); // NOI18N
        bot_borrarposicion.setText("BORRAR POSICIÓN");
        bot_borrarposicion.setEnabled(false);
        bot_borrarposicion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bot_borrarposicionActionPerformed(evt);
            }
        });
        getContentPane().add(bot_borrarposicion, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 590, 210, 40));
        complemento.DisableBorderButton(bot_borrarposicion);

        lbl_titulodetalleoc.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_titulodetalleoc.setForeground(new java.awt.Color(0, 138, 218));
        lbl_titulodetalleoc.setText("DETALLES ORDEN DE COMPRA");
        getContentPane().add(lbl_titulodetalleoc, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 260, -1, -1));

        bot_agregarposicion.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        bot_agregarposicion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contabilizar.png"))); // NOI18N
        bot_agregarposicion.setText("CONTABILIZAR POSICIÓN");
        bot_agregarposicion.setEnabled(false);
        bot_agregarposicion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bot_agregarposicionActionPerformed(evt);
            }
        });
        getContentPane().add(bot_agregarposicion, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 590, -1, 40));
        complemento.DisableBorderButton(bot_agregarposicion);

        bot_verdocumento.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        bot_verdocumento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/documento.png"))); // NOI18N
        bot_verdocumento.setText("VER DOCUMENTO");
        bot_verdocumento.setEnabled(false);
        bot_verdocumento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bot_verdocumentoActionPerformed(evt);
            }
        });
        getContentPane().add(bot_verdocumento, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 590, 190, 40));
        complemento.DisableBorderButton(bot_verdocumento);

        table_posicionentrada.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        table_posicionentrada.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "POSICIÓN", "NRO MATERIAL", "MATERIAL", "CANTIDAD INGRESADA", "UMB", "FECHA DE INGRESO", "ALMACEN DESTINO", "UBICACION", "VALORACION", "OBSERVACIONES"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(table_posicionentrada);
        if (table_posicionentrada.getColumnModel().getColumnCount() > 0) {
            table_posicionentrada.getColumnModel().getColumn(0).setMinWidth(60);
            table_posicionentrada.getColumnModel().getColumn(0).setPreferredWidth(60);
            table_posicionentrada.getColumnModel().getColumn(0).setMaxWidth(60);
            table_posicionentrada.getColumnModel().getColumn(1).setMinWidth(90);
            table_posicionentrada.getColumnModel().getColumn(1).setPreferredWidth(90);
            table_posicionentrada.getColumnModel().getColumn(1).setMaxWidth(90);
            table_posicionentrada.getColumnModel().getColumn(3).setMinWidth(140);
            table_posicionentrada.getColumnModel().getColumn(3).setPreferredWidth(140);
            table_posicionentrada.getColumnModel().getColumn(3).setMaxWidth(140);
            table_posicionentrada.getColumnModel().getColumn(4).setMinWidth(60);
            table_posicionentrada.getColumnModel().getColumn(4).setPreferredWidth(60);
            table_posicionentrada.getColumnModel().getColumn(4).setMaxWidth(60);
            table_posicionentrada.getColumnModel().getColumn(5).setMinWidth(120);
            table_posicionentrada.getColumnModel().getColumn(5).setPreferredWidth(120);
            table_posicionentrada.getColumnModel().getColumn(5).setMaxWidth(120);
            table_posicionentrada.getColumnModel().getColumn(6).setMinWidth(120);
            table_posicionentrada.getColumnModel().getColumn(6).setPreferredWidth(120);
            table_posicionentrada.getColumnModel().getColumn(6).setMaxWidth(120);
            table_posicionentrada.getColumnModel().getColumn(7).setMinWidth(100);
            table_posicionentrada.getColumnModel().getColumn(7).setPreferredWidth(100);
            table_posicionentrada.getColumnModel().getColumn(7).setMaxWidth(100);
            table_posicionentrada.getColumnModel().getColumn(8).setMinWidth(120);
            table_posicionentrada.getColumnModel().getColumn(8).setPreferredWidth(120);
            table_posicionentrada.getColumnModel().getColumn(8).setMaxWidth(120);
        }

        getContentPane().add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 470, 1330, 110));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setForeground(new java.awt.Color(245, 245, 245));
        jPanel1.setLayout(null);
        jPanel1.add(date_ingreso);
        date_ingreso.setBounds(520, 10, 130, 20);

        lbl_cantidadpendiente.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbl_cantidadpendiente.setText("CANTIDAD PENDIENTE");
        jPanel1.add(lbl_cantidadpendiente);
        lbl_cantidadpendiente.setBounds(10, 160, 150, 15);

        spin_cantidadingresada.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        spin_cantidadingresada.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        jPanel1.add(spin_cantidadingresada);
        spin_cantidadingresada.setBounds(190, 70, 80, 20);

        lbl_posicion.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbl_posicion.setText("FECHA DE INGRESO");
        jPanel1.add(lbl_posicion);
        lbl_posicion.setBounds(360, 10, 117, 15);

        lbl_valoracion.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbl_valoracion.setText("VALORACIÓN");
        jPanel1.add(lbl_valoracion);
        lbl_valoracion.setBounds(360, 70, 81, 15);

        cmb_valoracion.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jPanel1.add(cmb_valoracion);
        cmb_valoracion.setBounds(520, 70, 230, 20);

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel13.setText("DESTINO ALMACÉN");
        jPanel1.add(jLabel13);
        jLabel13.setBounds(360, 100, 116, 15);

        cmb_almacen.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cmb_almacen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_almacenActionPerformed(evt);
            }
        });
        jPanel1.add(cmb_almacen);
        cmb_almacen.setBounds(520, 100, 110, 20);

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel15.setText("UBICACIÓN");
        jPanel1.add(jLabel15);
        jLabel15.setBounds(360, 130, 68, 15);

        lbl_observacion.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbl_observacion.setText("OBSERVACIONES");
        jPanel1.add(lbl_observacion);
        lbl_observacion.setBounds(770, 10, 103, 15);

        area_observacion.setColumns(20);
        area_observacion.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        area_observacion.setLineWrap(true);
        area_observacion.setRows(5);
        area_observacion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                area_observacionKeyReleased(evt);
            }
        });
        jScrollPane4.setViewportView(area_observacion);

        jPanel1.add(jScrollPane4);
        jScrollPane4.setBounds(770, 30, 270, 100);

        lbl_cantidadautorizada.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbl_cantidadautorizada.setText("PROYECTO DESTINADO");
        jPanel1.add(lbl_cantidadautorizada);
        lbl_cantidadautorizada.setBounds(360, 40, 139, 17);

        lbl_numeromaterial.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbl_numeromaterial.setText("NÚMERO DE MATERIAL");
        jPanel1.add(lbl_numeromaterial);
        lbl_numeromaterial.setBounds(10, 10, 140, 15);

        lbl_umb1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jPanel1.add(lbl_umb1);
        lbl_umb1.setBounds(190, 100, 60, 20);

        panel_foto.setBackground(new java.awt.Color(255, 255, 255));
        panel_foto.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "FOTO REFERENCIAL", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N
        panel_foto.setForeground(new java.awt.Color(0, 0, 255));

        javax.swing.GroupLayout panel_fotoLayout = new javax.swing.GroupLayout(panel_foto);
        panel_foto.setLayout(panel_fotoLayout);
        panel_fotoLayout.setHorizontalGroup(
            panel_fotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbl_foto, javax.swing.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE)
        );
        panel_fotoLayout.setVerticalGroup(
            panel_fotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbl_foto, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
        );

        jPanel1.add(panel_foto);
        panel_foto.setBounds(1090, 0, 220, 180);

        lbl_desnromaterial.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jPanel1.add(lbl_desnromaterial);
        lbl_desnromaterial.setBounds(190, 10, 130, 20);

        lbl_descantidadautorizada.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jPanel1.add(lbl_descantidadautorizada);
        lbl_descantidadautorizada.setBounds(190, 40, 50, 20);

        txt_ubicacion.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_ubicacion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_ubicacionKeyReleased(evt);
            }
        });
        jPanel1.add(txt_ubicacion);
        txt_ubicacion.setBounds(520, 130, 110, 21);

        lbl_ubicacionexiste.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jPanel1.add(lbl_ubicacionexiste);
        lbl_ubicacionexiste.setBounds(630, 130, 150, 20);

        lbl_cantidadautorizada1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbl_cantidadautorizada1.setText("CANTIDAD AUTORIZADA");
        jPanel1.add(lbl_cantidadautorizada1);
        lbl_cantidadautorizada1.setBounds(10, 40, 160, 17);

        lbl_desproyecto.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jPanel1.add(lbl_desproyecto);
        lbl_desproyecto.setBounds(520, 40, 250, 20);

        lbl_cantidadaprobada1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbl_cantidadaprobada1.setText("CANTIDAD A INGRESAR");
        jPanel1.add(lbl_cantidadaprobada1);
        lbl_cantidadaprobada1.setBounds(10, 70, 144, 15);

        lbl_cantidaddespachada.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbl_cantidaddespachada.setText("CANTIDAD INGRESADA");
        jPanel1.add(lbl_cantidaddespachada);
        lbl_cantidaddespachada.setBounds(10, 130, 160, 15);

        lbl_descantidadingresada.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jPanel1.add(lbl_descantidadingresada);
        lbl_descantidadingresada.setBounds(190, 130, 50, 20);

        lbl_descantidadpendiente.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jPanel1.add(lbl_descantidadpendiente);
        lbl_descantidadpendiente.setBounds(190, 160, 50, 20);

        lbl_unidadmedida.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbl_unidadmedida.setText("UNIDAD DE MEDIDA BASE");
        jPanel1.add(lbl_unidadmedida);
        lbl_unidadmedida.setBounds(10, 100, 180, 15);

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, 1320, 190));

        jPanel7.setBackground(new java.awt.Color(153, 153, 153));
        jPanel7.setLayout(null);

        lbl_encabezadoalmacen2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_encabezadoalmacen2.setForeground(new java.awt.Color(255, 255, 255));
        lbl_encabezadoalmacen2.setText("ENTRADA DE MATERIAL");
        jPanel7.add(lbl_encabezadoalmacen2);
        lbl_encabezadoalmacen2.setBounds(260, 10, 200, 29);

        lbl_imagentimaca2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/TIMACA.png"))); // NOI18N
        jPanel7.add(lbl_imagentimaca2);
        lbl_imagentimaca2.setBounds(10, 0, 240, 60);

        bot_reiniciar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        bot_reiniciar.setForeground(new java.awt.Color(255, 255, 255));
        bot_reiniciar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/reiniciar.png"))); // NOI18N
        bot_reiniciar.setText("Reiniciar");
        bot_reiniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bot_reiniciarActionPerformed(evt);
            }
        });
        jPanel7.add(bot_reiniciar);
        bot_reiniciar.setBounds(1120, 20, 120, 33);
        complemento.DisableBorderButton(bot_reiniciar);

        bot_cerrar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        bot_cerrar.setForeground(new java.awt.Color(255, 255, 255));
        bot_cerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/cerrar.png"))); // NOI18N
        bot_cerrar.setText("Cerrar");
        bot_cerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bot_cerrarActionPerformed(evt);
            }
        });
        jPanel7.add(bot_cerrar);
        bot_cerrar.setBounds(1245, 20, 120, 29);
        complemento.DisableBorderButton(bot_cerrar);

        lbl_usuario.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lbl_usuario.setForeground(new java.awt.Color(255, 255, 255));
        lbl_usuario.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbl_usuario.setText("USUARIO");
        jPanel7.add(lbl_usuario);
        lbl_usuario.setBounds(820, 10, 280, 17);

        lbl_nombres.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lbl_nombres.setForeground(new java.awt.Color(255, 255, 255));
        lbl_nombres.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbl_nombres.setText("NOMBRES");
        lbl_nombres.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jPanel7.add(lbl_nombres);
        lbl_nombres.setBounds(822, 30, 280, 17);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.add(jPanel3);
        jPanel3.setBounds(1110, 10, 1, 40);

        getContentPane().add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1430, 60));

        bot_buscarproveedor.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bot_buscarproveedor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/buscar.png"))); // NOI18N
        bot_buscarproveedor.setText("BUSCAR");
        bot_buscarproveedor.setEnabled(false);
        bot_buscarproveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bot_buscarproveedorActionPerformed(evt);
            }
        });
        getContentPane().add(bot_buscarproveedor, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 90, 120, 30));
        complemento.DisableBorderButton(bot_buscar);

        group_entrada.add(radio_ordencompra);
        radio_ordencompra.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        radio_ordencompra.setSelected(true);
        radio_ordencompra.setText("NRO ORDEN DE COMPRA");
        radio_ordencompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio_ordencompraActionPerformed(evt);
            }
        });
        getContentPane().add(radio_ordencompra, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, -1));

        group_entrada.add(radio_rif);
        radio_rif.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        radio_rif.setText("RIF PROVEEDOR");
        radio_rif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio_rifActionPerformed(evt);
            }
        });
        getContentPane().add(radio_rif, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 60, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bot_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bot_buscarActionPerformed
       ctrl_cotizacion cotizacion = null;
       
       if(!txt_numeroordendecompra.getText().trim().equals("")){
                cotizacion = new ctrl_cotizacion(
                   0, 
                   0, 
                   "", 
                   "", 
                   0, 
                   0, 
                   0, 
                   Integer.parseInt(frm_principalM1.lbl_cedula.getText().trim()), 
                   0, 
                   0,
                   0.0, 
                   0.0, 
                   "", 
                   "", //tipo plazo entrega
                    0, //dias plazoentrega
                   "", //condicion de pago
                   "", //tipotransporte
                    0, //diasflete
                    0.0, //costoflete
                    0, //codigomonedaflete
                   "", //fotocotizacion
                    "", //justificacion
                    "", //observacion     
                   false, 
                   false, 
                   "", 
                   false, 
                   "", 
                   false, 
                   Integer.parseInt(txt_numeroordendecompra.getText().trim()),
                   "",     
                   true
                );                  
           try {
               cotizacion.consultar_ordendecompra_detalle_entrada(table_posicioncompra);
               txt_rifproveedor.setText(table_posicioncompra.getValueAt(0, 6).toString());
           } catch (SQLException | ArrayIndexOutOfBoundsException ex) {
           }
                
       }
       
       
       
    }//GEN-LAST:event_bot_buscarActionPerformed

    private void bot_agregarposicionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bot_agregarposicionActionPerformed
        frm_progress frm = new frm_progress(4,Integer.parseInt(spin_cantidadingresada.getValue().toString()));
        frm.setVisible(true);
    }//GEN-LAST:event_bot_agregarposicionActionPerformed

    private void bot_borrarposicionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bot_borrarposicionActionPerformed
        class_entrada modelo_entrada = null;
        ctrl_entrada entrada = null;
        
           entrada  = new ctrl_entrada(
                    Integer.parseInt(txt_identrada.getText().trim()), //id_entrada,
                    Integer.parseInt(txt_posicion.getText().trim()), 
                    0, //id_material, 
                    "", //descripcionmaterial
                    0, //idvaloracion
                    "", //descripcionvaloracion
                    1,  //moneda
                    "", // descripcion_moneda,  
                    0, //id_almacen,
                    "", //descripcion_almacen,
                    0, //id_ubicacion
                    "", //ubicacion
                    0, //id_procedencia
                    "", //descrpcion_procedencia
                     0, //id_clasedemovimiento
                    "", //descrpcion_clasedemovimiento
                     0, //id_proyecto
                    "", //descrpcion_proyecto
                     0,
                    "", //codigo_alterno
                    0, //iddocumento
                    0,//idcompra
                    0, //nrofactura
                    "", //fecha_entrada,
                    0, //cantidad_ingresada,
                    0.0, //precio_unitario,
                    0.0, //monto,
                    0.0, //flete
                    0.0, //monto
                    "", //observacion
                    true //status
                           
            ); 
        
         modelo_entrada = entrada.borrar_posicion(table_posicionentrada,table_posicionentrada.getSelectedRow());
        
        
    }//GEN-LAST:event_bot_borrarposicionActionPerformed

    private void bot_verdocumentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bot_verdocumentoActionPerformed
         try {
            pdf_recepcion.dato("\\\\192.168.0.3\\dist\\Documentos_SisTimaca",Integer.parseInt(txt_nrodocumento.getText()),"NoExpress");
        } catch (DocumentException | IOException ex) {
            Logger.getLogger(frm_entradaexpress.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(frm_entradaexpress.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bot_verdocumentoActionPerformed

    private void txt_numeroordendecompraKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_numeroordendecompraKeyReleased
        ctrl_cotizacion cotizacion = null;
              
        if ( ( (evt.getKeyCode() >= 48 ) && (evt.getKeyCode() <= 57 ) ) || ( (evt.getKeyCode() >= 37 ) && (evt.getKeyCode() <= 40 ) ) || ((evt.getKeyCode() >= 96 ) && (evt.getKeyCode() <= 105 )) || (evt.getKeyCode() == 144) || (evt.getKeyCode() == 127) || (evt.getKeyCode() == 8)  || (evt.getKeyCode() == 10)){       
            
            if(!txt_numeroordendecompra.getText().trim().equals("")){
                cotizacion = new ctrl_cotizacion(
                   0, 
                   0, 
                   "", 
                   "", 
                   0, 
                   0, 
                   0, 
                   Integer.parseInt(frm_principalM1.lbl_cedula.getText().trim()), 
                   0, 
                   0,
                   0.0, 
                   0.0, 
                   "", 
                   "", //tipo plazo entrega
                    0, //dias plazoentrega
                   "", //condicion de pago
                   "", //tipotransporte
                    0, //diasflete
                    0.0, //costoflete
                    0, //codigomonedaflete
                   "", //fotocotizacion
                    "", //justificacion
                    "", //observacion     
                   false, 
                   false, 
                   "", 
                   false, 
                   "", 
                   false, 
                   Integer.parseInt(txt_numeroordendecompra.getText().trim()),
                   "",     
                   true
                );                  
            
           try {
               cotizacion.consultar_ordendecompra_detalle_entrada(table_posicioncompra);
               //txt_proveedor.setText(table_posicioncompra.getValueAt(0, 6).toString());
           } catch (SQLException | ArrayIndexOutOfBoundsException ex) {}
                
       }


        }
        else{
             if (evt.getKeyCode() == 27){
         
                    bot_reiniciar.doClick();
                    
             }
             else{
                JOptionPane.showMessageDialog(null, "CARÁCTER NO VÁLIDO. SOLO NÚMEROS (1..9)", "SISTIMACA - USUARIO", JOptionPane.ERROR_MESSAGE,null);
                txt_numeroordendecompra.setText("");
             }   
        }            
        
            
    }//GEN-LAST:event_txt_numeroordendecompraKeyReleased

    private void table_posicioncompraMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_posicioncompraMousePressed
        Integer fila;
        ctrl_cotizacion cotizacion=null;
        BufferedImage img;
        Integer cantidad=0;
        Integer cantidad_despachada = 0;
        Integer cantidad_pendiente = 0;
        
        fila = table_posicioncompra.getSelectedRow();
        
        lbl_desnromaterial.setText(table_posicioncompra.getValueAt(fila,4).toString());
        lbl_descantidadautorizada.setText(table_posicioncompra.getValueAt(fila,6).toString()); 
        lbl_umb1.setText(table_posicioncompra.getValueAt(fila,7).toString());
        lbl_desproyecto.setText(table_posicioncompra.getValueAt(fila,12).toString());
        
        cotizacion = new ctrl_cotizacion(
                   0, 
                   0, 
                   "", 
                   "", 
                   0, 
                   Integer.parseInt(lbl_desnromaterial.getText()), 
                   0, 
                   Integer.parseInt(frm_principalM1.lbl_cedula.getText().trim()), 
                   0, 
                   0,
                   0.0, 
                   0.0, 
                   "", 
                   "", //tipo plazo entrega
                    0, //dias plazoentrega
                   "", //condicion de pago
                   "", //tipotransporte
                    0, //diasflete
                    0.0, //costoflete
                    0, //codigomonedaflete
                   "", //fotocotizacion
                    "", //justificacion
                    "", //observacion    
                   false, 
                   false, 
                   "", 
                   false, 
                   "", 
                   false, 
                   0,
                   "",     
                   true
                );                  
        try{
        
            img = funciones.decodeToImage(cotizacion.consultar_foto());
            lbl_foto.setIcon(null);
            ImageIcon icon = new ImageIcon(img);
            Icon icono = new ImageIcon(icon.getImage().getScaledInstance(lbl_foto.getWidth(), lbl_foto.getHeight(), Image.SCALE_DEFAULT));
            
            lbl_foto.setIcon(icono);
        }
        catch(NullPointerException ex){
            
        }
        
        ctrl_entrada entrada  = new ctrl_entrada(
                 0, //id_entrada,
                 Integer.parseInt(table_posicioncompra.getValueAt(fila, 3).toString()), 
                 Integer.parseInt(lbl_desnromaterial.getText().trim()), //id_material, 
                 "", //descripcionmaterial
                 0, //idvaloracion
                 "", //descripcionvaloracion
                 0,  //moneda
                 "", // descripcion_moneda,  
                 0, //id_almacen,
                 "", //descripcion_almacen,
                 0,//id_ubicacion
                 "", //ubicacion
                 0, //idvaloracion,
                 "", //descripcion_valoracion,
                 1,//id_clasedemovimiento
                 "ENTRADA DE MATERIAL", //descripcion_clasedemovimiento
                 0,//id_proyecto
                 "", //descripcion_proyecto
                 0,
                 "",//codigo_alterno
                 0, //iddocumento
                 Integer.parseInt(table_posicioncompra.getValueAt(fila, 2).toString().trim().substring(4, table_posicioncompra.getValueAt(fila, 2).toString().trim().length()).trim()),//idcompra
                 0, //nrofactura
                 "", //fecha_entrada,
                 Integer.parseInt(spin_cantidadingresada.getValue().toString()), //cantidad_ingresada,
                 0.0, //precio_unitario,
                 0.0, //monto,
                 0.0, //flete
                 0.0, //monto
                 area_observacion.getText().trim(), //observacion
                 true //status

         ); 


        try {
            cantidad = entrada.consultar_cantidadentranteordendecompra();
            if (cantidad > 0){
                cantidad_despachada = Integer.parseInt(lbl_descantidadautorizada.getText()) - cantidad;
                cantidad_pendiente = Integer.parseInt(lbl_descantidadautorizada.getText()) - cantidad_despachada;
                if (cantidad_pendiente>=1){
                    spin_cantidadingresada.setValue(cantidad_pendiente);
                }    
                lbl_descantidadingresada.setText(cantidad_despachada.toString());
                lbl_descantidadpendiente.setText(cantidad_pendiente.toString());
            }
            else{
                spin_cantidadingresada.setValue(table_posicioncompra.getValueAt(fila,6));
                lbl_descantidadingresada.setText("0");
                lbl_descantidadpendiente.setText(lbl_descantidadautorizada.getText());
            }
        } catch (SQLException ex) {
            Logger.getLogger(frm_solicitud.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
        bot_agregarposicion.setEnabled(true);
    }//GEN-LAST:event_table_posicioncompraMousePressed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
                                  
             
        ctrl_comun control = new ctrl_comun(1);
        cmb_almacen =  control.cargar_combo(cmb_almacen,"Seleccione...");
        control = new ctrl_comun(12);
        cmb_valoracion =  control.cargar_combo(cmb_valoracion,"Seleccione...");
        txt_numeroordendecompra.requestFocusInWindow();
    }//GEN-LAST:event_formWindowOpened

    private void cmb_almacenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_almacenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_almacenActionPerformed

    private void bot_reiniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bot_reiniciarActionPerformed
        frm_entrada frm = new frm_entrada();
        frm.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_bot_reiniciarActionPerformed

    private void bot_cerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bot_cerrarActionPerformed
        Integer resp = JOptionPane.showConfirmDialog(null, "ESTÁ SEGURO EN SALIR?");
        if (resp.equals(0)){
            this.dispose();
        }    

    }//GEN-LAST:event_bot_cerrarActionPerformed

    private void bot_buscarproveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bot_buscarproveedorActionPerformed
        frm_buscarproveedor frm = new frm_buscarproveedor(5);
        frm.setVisible(true);  
    }//GEN-LAST:event_bot_buscarproveedorActionPerformed

    private void txt_ubicacionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_ubicacionKeyReleased

        if(!txt_ubicacion.getText().trim().equals("")){
            ctrl_ubicacion ubicacion = new ctrl_ubicacion(0, txt_ubicacion.getText().trim(),"");

            if(ubicacion.buscar_ubicacion().equals(0)){
                lbl_ubicacionexiste.setText("UBICACIÓN NO EXISTE");
                lbl_ubicacionexiste.setForeground(Color.RED);
            }
            else{
                lbl_ubicacionexiste.setText("UBICACIÓN EXISTE");
                lbl_ubicacionexiste.setForeground(Color.GREEN);
            }
            txt_idubicacion.setText(ubicacion.buscar_ubicacion().toString());
        }
        else{
            lbl_ubicacionexiste.setText("");
            txt_idubicacion.setText("0");
        }
    }//GEN-LAST:event_txt_ubicacionKeyReleased

    private void txt_rifproveedorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_rifproveedorKeyReleased
        ctrl_cotizacion cotizacion = null;
              
           if(!txt_rifproveedor.getText().trim().equals("") && txt_rifproveedor.getText().trim().length()>=9 ){
                cotizacion = new ctrl_cotizacion(
                   0, 
                   0, 
                   txt_rifproveedor.getText().trim(), 
                   "", 
                   0, 
                   0, 
                   0, 
                   Integer.parseInt(frm_principalM1.lbl_cedula.getText().trim()), 
                   0, 
                   0,
                   0.0, 
                   0.0, 
                   "", 
                   "", //tipo plazo entrega
                    0, //dias plazoentrega
                   "", //condicion de pago
                   "", //tipotransporte
                    0, //diasflete
                    0.0, //costoflete
                    0, //codigomonedaflete
                   "", //fotocotizacion
                    "", //justificacion
                    "", //observacion     
                   false, 
                   false, 
                   "", 
                   false, 
                   "", 
                   false, 
                   0,
                   "",     
                   true
                );                  
            
           try {
               cotizacion.consultar_ordendecompraproveedor_detalle_entrada(table_posicioncompra);
               //txt_proveedor.setText(table_posicioncompra.getValueAt(0, 6).toString());
           } catch (SQLException | ArrayIndexOutOfBoundsException ex) {}
                
       }


       
    }//GEN-LAST:event_txt_rifproveedorKeyReleased

    private void radio_ordencompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radio_ordencompraActionPerformed
        DefaultTableModel modelotabla = (DefaultTableModel) table_posicioncompra.getModel();
       
        modelotabla.setRowCount(0);
        
       txt_rifproveedor.setText("");
       txt_rifproveedor.setEnabled(false);
       bot_buscarproveedor.setEnabled(false);
       txt_numeroordendecompra.setEnabled(true);
       bot_buscar.setEnabled(true);
    }//GEN-LAST:event_radio_ordencompraActionPerformed

    private void radio_rifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radio_rifActionPerformed
        DefaultTableModel modelotabla = (DefaultTableModel) table_posicioncompra.getModel();
       
        modelotabla.setRowCount(0);
        
       txt_numeroordendecompra.setText("");
       txt_numeroordendecompra.setEnabled(false);
       bot_buscar.setEnabled(false);
       txt_rifproveedor.setEnabled(true);
       bot_buscarproveedor.setEnabled(true);
    }//GEN-LAST:event_radio_rifActionPerformed

    private void area_observacionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_area_observacionKeyReleased
         if(area_observacion.getText().trim().length() > 60){
               area_observacion.setText(area_observacion.getText().trim().substring(0, 60));
         }
    }//GEN-LAST:event_area_observacionKeyReleased

 public static void agregar_entrada_oc(){
    
      ctrl_entrada entrada = null;
      
       
       String fecha_ingreso;
       class_entrada modelo_entrada = null;
       Integer fila;
       
       fila = table_posicioncompra.getSelectedRow();
       
       fecha_ingreso = funciones.fecha_convertir_date(date_ingreso, 1);
      
       
        if (Integer.parseInt(spin_cantidadingresada.getValue().toString()) <= Integer.parseInt(lbl_descantidadpendiente.getText())){
                if (!fecha_ingreso.equals("") && 
                    !cmb_almacen.getSelectedItem().equals("Seleccione") &&
                    !cmb_valoracion.getSelectedItem().equals("Seleccione") &&
                    !txt_idubicacion.getText().trim().equals("0")    
                ){
                        //AGREGAR POSICION DE ENTRADA
                   entrada  = new ctrl_entrada(
                            Integer.parseInt(txt_identrada.getText().trim()), //id_entrada,
                            Integer.parseInt(table_posicioncompra.getValueAt(fila, 3).toString()), 
                            Integer.parseInt(lbl_desnromaterial.getText().trim()), //id_material, 
                            "", //descripcionmaterial
                            Integer.parseInt(cmb_valoracion.getSelectedItem().toString().substring(0,3).trim()), //idvaloracion
                            cmb_valoracion.getSelectedItem().toString().substring(4,cmb_valoracion.getSelectedItem().toString().length()).trim(), //descripcionvaloracion
                            Integer.parseInt(table_posicioncompra.getValueAt(fila,9).toString()),  //moneda
                            "", // descripcion_moneda,  
                            Integer.parseInt(cmb_almacen.getSelectedItem().toString().substring(0,3).trim()), //id_almacen,
                            cmb_almacen.getSelectedItem().toString().substring(4,cmb_almacen.getSelectedItem().toString().length()).trim(), //descripcion_almacen,
                            Integer.parseInt(txt_idubicacion.getText().trim()),//id_ubicacion
                            txt_ubicacion.getText().trim(), //ubicacion
                            Integer.parseInt(cmb_valoracion.getSelectedItem().toString().substring(0,3).trim()), //idvaloracion,
                            cmb_valoracion.getSelectedItem().toString().substring(4,cmb_valoracion.getSelectedItem().toString().length()).trim(), //descripcion_valoracion,
                            1,//id_clasedemovimiento
                            "ENTRADA DE MATERIAL", //descripcion_clasedemovimiento
                            Integer.parseInt(table_posicioncompra.getValueAt(fila,11).toString()),//id_proyecto
                            lbl_desproyecto.getText().trim(), //descripcion_proyecto
                            Integer.parseInt(frm_principalM1.lbl_cedula.getText()),
                            "",//codigo_alterno
                            Integer.parseInt(txt_identrada.getText().trim()), //iddocumento
                            Integer.parseInt(table_posicioncompra.getValueAt(fila, 2).toString().trim().substring(4, table_posicioncompra.getValueAt(fila, 2).toString().trim().length()).trim()),//idcompra,//idcompra
                            0, //nrofactura
                            fecha_ingreso.trim(), //fecha_entrada,
                            Integer.parseInt(spin_cantidadingresada.getValue().toString()), //cantidad_ingresada,
                            Double.parseDouble(table_posicioncompra.getValueAt(fila,13).toString()), //precio_unitario,
                            Double.parseDouble(table_posicioncompra.getValueAt(fila,14).toString()), //monto,
                            Double.parseDouble(table_posicioncompra.getValueAt(fila,15).toString()), //flete
                            Double.parseDouble(table_posicioncompra.getValueAt(fila,16).toString()), //monto
                            area_observacion.getText().trim(), //observacion
                            true //status

                    ); 

                   bot_agregarposicion.setEnabled(false);
                   bot_borrarposicion.setEnabled(false);
                   bot_verdocumento.setEnabled(false);
                   txt_numeroordendecompra.setEnabled(false);
                   txt_rifproveedor.setEnabled(false);
                   radio_ordencompra.setEnabled(false);
                   radio_rif.setEnabled(false);
                   bot_buscarproveedor.setEnabled(false);
                   
                   try {
                       //AGREGA POSICION Y ACTUALIZA EL MAESTRO DE MATERIAL
                       modelo_entrada = entrada.crear_posicion(table_posicionentrada);
                       
                       //SI LA CANTIDAD DE ENTRADA ES IGUAL A LA COTIZADA . DESHABILITA LA COTIZACION
                       if (Integer.parseInt(spin_cantidadingresada.getValue().toString()) == Integer.parseInt(lbl_descantidadpendiente.getText())){
 
                           ctrl_cotizacion cotizacion = new ctrl_cotizacion(
                                    Integer.parseInt(table_posicioncompra.getValueAt(fila, 17).toString()), 
                                    0, 
                                    "", 
                                    "", 
                                    0, 
                                    0, 
                                    0, 
                                    0, 
                                    0, 
                                    0,
                                    0.0, 
                                    0.0, 
                                    "", 
                                    "", //tipo plazo entrega
                                     0, //dias plazoentrega
                                    "", //condicion de pago
                                    "", //tipotransporte
                                     0, //diasflete
                                     0.0, //costoflete
                                     0, //codigomonedaflete
                                    "", //fotocotizacion
                                     "", //justificacion
                                     "", //observacion    
                                    false, 
                                    false, 
                                    "", 
                                    false, 
                                    "", 
                                    false, 
                                    0,
                                    "",     
                                    false
                                 ); 
                                 //DESHABILITA LA COTIZACION
                                cotizacion.cotizacion_actualizar_status_cotizacion();
                                                            
                               
                       }
                       JOptionPane.showMessageDialog(null, "DATOS AGREGADOS SATISFACTORIAMENTE");
                  
                   } catch (SQLException ex) {
                       Logger.getLogger(frm_solicitud.class.getName()).log(Level.SEVERE, null, ex);
                   }
                    txt_identrada.setText(modelo_entrada.getId_entrada().toString());
                    txt_posicion.setText(modelo_entrada.getPosicion().toString());
                    txt_nrodocumento.setText(String.valueOf(modelo_entrada.getId_documento()));
                    bot_verdocumento.setEnabled(true);
                    bot_agregarposicion.setEnabled(false);
                    txt_idproveedor.setText(table_posicioncompra.getValueAt(fila, 0).toString().trim());
                    
                    //REINICIO PARCIAL DEL FRAME
                    
                    lbl_desnromaterial.setText("");
                    lbl_descantidadautorizada.setText("");
                    spin_cantidadingresada.setValue(1);
                    lbl_umb1.setText("");
                    lbl_descantidadingresada.setText("");
                    lbl_descantidadpendiente.setText("");
                    date_ingreso.setDate(null);
                    lbl_desproyecto.setText("");
                    cmb_valoracion.setSelectedIndex(0);
                    cmb_almacen.setSelectedIndex(0);
                    txt_ubicacion.setText("");
                    area_observacion.setText("");
                    lbl_foto.setIcon(null);
                    lbl_ubicacionexiste.setText("");
                    
                    
                    txt_numeroordendecompra.setEnabled(true);
                    txt_rifproveedor.setEnabled(false);
                    txt_numeroordendecompra.setText("");
                    txt_rifproveedor.setText("");
                    radio_ordencompra.setEnabled(true);
                    radio_rif.setEnabled(true);
                    bot_buscarproveedor.setEnabled(true); 

                    
                    
                    
                    if(!txt_numeroordendecompra.getText().trim().equals("")){
                            //REINICIA TABLA DE LA POSICIONES DE LA ORDEN DE COMPRA
                            ctrl_cotizacion cotizacion = new ctrl_cotizacion(
                                   0, 
                                   0, 
                                   "", 
                                   "", 
                                   0, 
                                   0, 
                                   0, 
                                   Integer.parseInt(frm_principalM1.lbl_cedula.getText().trim()), 
                                   0, 
                                   0,
                                   0.0, 
                                   0.0, 
                                   "", 
                                   "", //tipo plazo entrega
                                    0, //dias plazoentrega
                                   "", //condicion de pago
                                   "", //tipotransporte
                                    0, //diasflete
                                    0.0, //costoflete
                                    0, //codigomonedaflete
                                   "", //fotocotizacion
                                    "", //justificacion
                                    "", //observacion     
                                   false, 
                                   false, 
                                   "", 
                                   false, 
                                   "", 
                                   false, 
                                   Integer.parseInt(txt_numeroordendecompra.getText().trim()),
                                   "",     
                                   true
                                );                  

                           try {
                               cotizacion.consultar_ordendecompra_detalle_entrada(table_posicioncompra);
                               
                           } catch (SQLException | ArrayIndexOutOfBoundsException ex) {}
                    }
                    else{
                        // SI ENTRO POR BUSCAR PROVEEDOR REINICIA LA TABLA DE ORDENES DE COMPRA TAMBIEN
                        ctrl_cotizacion cotizacion = new ctrl_cotizacion(
                            0, 
                            0, 
                            txt_idproveedor.getText().trim(), 
                            "", 
                            0, 
                            0, 
                            0, 
                            0, 
                            0, 
                            0,
                            0.0, 
                            0.0, 
                            "", 
                            "", //tipo plazo entrega
                             0, //dias plazoentrega
                            "", //condicion de pago
                            "", //tipotransporte
                             0, //diasflete
                             0.0, //costoflete
                             0, //codigomonedaflete
                            "", //fotocotizacion
                             "", //justificacion
                             "", //observacion     
                            false, 
                            false, 
                            "", 
                            false, 
                            "", 
                            false, 
                            0,
                            "",     
                            true
                         );                  

                         try {
                             cotizacion.consultar_ordendecompraproveedor_detalle_entrada(frm_entrada.table_posicioncompra);

                         } catch (SQLException | ArrayIndexOutOfBoundsException ex) {}                        
                   }
                }
                else{
                        JOptionPane.showMessageDialog(null, "DATOS INCOMPLETOS");
        //                modelotabla.setRowCount(0);
                }
        }
        else{
            JOptionPane.showMessageDialog(null, "LA CANTIDAD A INGRESAR ES SUPERIOR A LA CANTIDAD COTIZADA POR EL PROVEEDOR");
        }    
    
    
}
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
       
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frm_entrada().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    protected static javax.swing.JTextArea area_observacion;
    protected static javax.swing.JButton bot_agregarposicion;
    protected static javax.swing.JButton bot_borrarposicion;
    private javax.swing.JButton bot_buscar;
    protected static javax.swing.JButton bot_buscarproveedor;
    private javax.swing.JButton bot_cerrar;
    private javax.swing.JButton bot_reiniciar;
    protected static javax.swing.JButton bot_verdocumento;
    protected static javax.swing.JComboBox cmb_almacen;
    protected static javax.swing.JComboBox<String> cmb_valoracion;
    protected static com.toedter.calendar.JDateChooser date_ingreso;
    private javax.swing.ButtonGroup group_entrada;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lbl_cantidadaprobada1;
    private javax.swing.JLabel lbl_cantidadautorizada;
    private javax.swing.JLabel lbl_cantidadautorizada1;
    private javax.swing.JLabel lbl_cantidaddespachada;
    private javax.swing.JLabel lbl_cantidadpendiente;
    protected static javax.swing.JLabel lbl_descantidadautorizada;
    protected static javax.swing.JLabel lbl_descantidadingresada;
    protected static javax.swing.JLabel lbl_descantidadpendiente;
    protected static javax.swing.JLabel lbl_desnromaterial;
    protected static javax.swing.JLabel lbl_desproyecto;
    private javax.swing.JLabel lbl_encabezadoalmacen2;
    protected static javax.swing.JLabel lbl_foto;
    private javax.swing.JLabel lbl_imagentimaca2;
    private javax.swing.JLabel lbl_nombres;
    private javax.swing.JLabel lbl_numeromaterial;
    private javax.swing.JLabel lbl_observacion;
    private javax.swing.JLabel lbl_posicion;
    private javax.swing.JLabel lbl_titulodetalleoc;
    private javax.swing.JLabel lbl_titulodetallesolicitud;
    protected static javax.swing.JLabel lbl_ubicacionexiste;
    protected static javax.swing.JLabel lbl_umb1;
    private javax.swing.JLabel lbl_unidadmedida;
    protected static javax.swing.JLabel lbl_usuario;
    private javax.swing.JLabel lbl_valoracion;
    private javax.swing.JPanel panel_foto;
    protected static javax.swing.JRadioButton radio_ordencompra;
    protected static javax.swing.JRadioButton radio_rif;
    protected static javax.swing.JSpinner spin_cantidadingresada;
    protected static javax.swing.JTable table_posicioncompra;
    protected static javax.swing.JTable table_posicionentrada;
    protected static javax.swing.JTextField txt_identrada;
    protected static javax.swing.JTextField txt_idproveedor;
    protected static javax.swing.JTextField txt_idubicacion;
    protected static javax.swing.JTextField txt_nrodocumento;
    protected static javax.swing.JTextField txt_numeroordendecompra;
    protected static javax.swing.JTextField txt_posicion;
    protected static javax.swing.JTextField txt_rifproveedor;
    protected static javax.swing.JTextField txt_ubicacion;
    // End of variables declaration//GEN-END:variables
}
